<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.thinkjoy.gaokao360.dao.ex.IZgkApeskCourseDao" >
  <resultMap id="BaseResultMap" type="cn.thinkjoy.zgk.domain.ZgkApeskCourse" >
    <id column="ac_id" property="acId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="liang_biao" property="liangBiao" jdbcType="VARCHAR" />
    <result column="ac_order" property="acOrder" jdbcType="INTEGER" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="batch" property="batch" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="report_url" property="reportUrl" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="grade_describe" property="gradeDescribe" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.name != null" >
         and name like #{condition.name}
      </if>
      <if test="condition.name_greater != null" >
         and name &gt;= #{condition.name_greater}
      </if>
      <if test="condition.name_less != null" >
         and name &lt;= #{condition.name_less}
      </if>
      <if test="condition.name_notequal != null" >
         and name &lt;&gt; #{condition.name_notequal}
      </if>
      <if test="condition.types != null" >
        <foreach collection="condition.types" item="type" open="and ac_order in (" close=")" separator=",">
          #{type}
        </foreach>
      </if>
      <if test="condition.name_in != null" >
         and name in
		<foreach collection="condition.name_in" item="name" open="(" separator="," close=")" >
			#{name}
		</foreach>
      </if>
      <if test="condition.liangBiao != null" >
         and liang_biao like #{condition.liangBiao}
      </if>
      <if test="condition.liangBiao_greater != null" >
         and liang_biao &gt;= #{condition.liangBiao_greater}
      </if>
      <if test="condition.liangBiao_less != null" >
         and liang_biao &lt;= #{condition.liangBiao_less}
      </if>
      <if test="condition.liangBiao_notequal != null" >
         and liang_biao &lt;&gt; #{condition.liangBiao_notequal}
      </if>
      <if test="condition.liangBiao_in != null" >
         and liang_biao in
		<foreach collection="condition.liangBiao_in" item="liangBiao" open="(" separator="," close=")" >
			#{liangBiao}
		</foreach>
      </if>
      <if test="condition.acOrder != null and condition.acOrder > -1" >
         and ac_order = #{condition.acOrder}
      </if>
      <if test="condition.acOrder_greater != null" >
         and ac_order &gt;= #{condition.acOrder_greater}
      </if>
      <if test="condition.acOrder_less != null" >
         and ac_order &lt;= #{condition.acOrder_less}
      </if>
      <if test="condition.acOrder_notequal != null" >
         and ac_order &lt;&gt; #{condition.acOrder_notequal}
      </if>
      <if test="condition.acOrder_in != null" >
         and ac_order in
		<foreach collection="condition.acOrder_in" item="acOrder" open="(" separator="," close=")" >
			#{acOrder}
		</foreach>
      </if>
      <if test="condition.picUrl != null" >
         and pic_url like #{condition.picUrl}
      </if>
      <if test="condition.picUrl_greater != null" >
         and pic_url &gt;= #{condition.picUrl_greater}
      </if>
      <if test="condition.picUrl_less != null" >
         and pic_url &lt;= #{condition.picUrl_less}
      </if>
      <if test="condition.picUrl_notequal != null" >
         and pic_url &lt;&gt; #{condition.picUrl_notequal}
      </if>
      <if test="condition.picUrl_in != null" >
         and pic_url in
		<foreach collection="condition.picUrl_in" item="picUrl" open="(" separator="," close=")" >
			#{picUrl}
		</foreach>
      </if>
      <if test="condition.introduce != null" >
         and introduce like #{condition.introduce}
      </if>
      <if test="condition.introduce_greater != null" >
         and introduce &gt;= #{condition.introduce_greater}
      </if>
      <if test="condition.introduce_less != null" >
         and introduce &lt;= #{condition.introduce_less}
      </if>
      <if test="condition.introduce_notequal != null" >
         and introduce &lt;&gt; #{condition.introduce_notequal}
      </if>
      <if test="condition.introduce_in != null" >
         and introduce in
		<foreach collection="condition.introduce_in" item="introduce" open="(" separator="," close=")" >
			#{introduce}
		</foreach>
      </if>
      <if test="condition.batch != null" >
         and batch like #{condition.batch}
      </if>
      <if test="condition.batch_greater != null" >
         and batch &gt;= #{condition.batch_greater}
      </if>
      <if test="condition.batch_less != null" >
         and batch &lt;= #{condition.batch_less}
      </if>
      <if test="condition.batch_notequal != null" >
         and batch &lt;&gt; #{condition.batch_notequal}
      </if>
      <if test="condition.batch_in != null" >
         and batch in
		<foreach collection="condition.batch_in" item="batch" open="(" separator="," close=")" >
			#{batch}
		</foreach>
      </if>
      <if test="condition.createDate != null" >
         and create_date like #{condition.createDate}
      </if>
      <if test="condition.createDate1 != null" >
         and create_date &gt;= #{condition.createDate1}
      </if>
      <if test="condition.createDate2 != null" >
         and create_date &lt;= #{condition.createDate2}
      </if>
      <if test="condition.state != null and condition.state > -1" >
         and state = #{condition.state}
      </if>
      <if test="condition.state_greater != null" >
         and state &gt;= #{condition.state_greater}
      </if>
      <if test="condition.state_less != null" >
         and state &lt;= #{condition.state_less}
      </if>
      <if test="condition.state_notequal != null" >
         and state &lt;&gt; #{condition.state_notequal}
      </if>
      <if test="condition.state_in != null" >
         and state in
		<foreach collection="condition.state_in" item="state" open="(" separator="," close=")" >
			#{state}
		</foreach>
      </if>
      <if test="condition.reportUrl != null" >
         and report_url like #{condition.reportUrl}
      </if>
      <if test="condition.reportUrl_greater != null" >
         and report_url &gt;= #{condition.reportUrl_greater}
      </if>
      <if test="condition.reportUrl_less != null" >
         and report_url &lt;= #{condition.reportUrl_less}
      </if>
      <if test="condition.reportUrl_notequal != null" >
         and report_url &lt;&gt; #{condition.reportUrl_notequal}
      </if>
      <if test="condition.reportUrl_in != null" >
         and report_url in
		<foreach collection="condition.reportUrl_in" item="reportUrl" open="(" separator="," close=")" >
			#{reportUrl}
		</foreach>
      </if>
      <if test="condition.grade != null" >
         and grade like #{condition.grade}
      </if>
      <if test="condition.grade_greater != null" >
         and grade &gt;= #{condition.grade_greater}
      </if>
      <if test="condition.grade_less != null" >
         and grade &lt;= #{condition.grade_less}
      </if>
      <if test="condition.grade_notequal != null" >
         and grade &lt;&gt; #{condition.grade_notequal}
      </if>
      <if test="condition.grade_in != null" >
         and grade in
		<foreach collection="condition.grade_in" item="grade" open="(" separator="," close=")" >
			#{grade}
		</foreach>
      </if>
      <if test="condition.gradeDescribe != null" >
         and grade_describe like #{condition.gradeDescribe}
      </if>
      <if test="condition.gradeDescribe_greater != null" >
         and grade_describe &gt;= #{condition.gradeDescribe_greater}
      </if>
      <if test="condition.gradeDescribe_less != null" >
         and grade_describe &lt;= #{condition.gradeDescribe_less}
      </if>
      <if test="condition.gradeDescribe_notequal != null" >
         and grade_describe &lt;&gt; #{condition.gradeDescribe_notequal}
      </if>
      <if test="condition.gradeDescribe_in != null" >
         and grade_describe in
		<foreach collection="condition.gradeDescribe_in" item="gradeDescribe" open="(" separator="," close=")" >
			#{gradeDescribe}
		</foreach>
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    ac_id, name, liang_biao, ac_order, pic_url, introduce, batch, create_date, state,
    report_url, grade, grade_describe
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.thinkjoy.zgk.common.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zgk_apesk_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="mysqlOffset != null and mysqlLength != null" >
      <![CDATA[ limit #{mysqlOffset} , #{mysqlLength} ]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from zgk_apesk_course
    where ac_id = #{acId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zgk_apesk_course
    where ac_id = #{acId}
  </delete>
  <delete id="deleteByExample" parameterType="cn.thinkjoy.zgk.common.Criteria" >
    delete from zgk_apesk_course
    <if test="condition != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.thinkjoy.zgk.domain.ZgkApeskCourse" useGeneratedKeys="true" keyProperty="acId" >
    insert into zgk_apesk_course (name, liang_biao, ac_order, pic_url, introduce, batch, create_date,
      state, report_url, grade, grade_describe)
    values (#{name}, #{liangBiao}, #{acOrder}, #{picUrl}, #{introduce}, #{batch}, #{createDate},
      #{state}, #{reportUrl}, #{grade}, #{gradeDescribe})
  </insert>
  <insert id="insertSelective" parameterType="cn.thinkjoy.zgk.domain.ZgkApeskCourse" useGeneratedKeys="true" keyProperty="acId" >
    insert into zgk_apesk_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="liangBiao != null" >
        liang_biao,
      </if>
      <if test="acOrder != null" >
        ac_order,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="batch != null" >
        batch,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="reportUrl != null" >
        report_url,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="gradeDescribe != null" >
        grade_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name},
      </if>
      <if test="liangBiao != null" >
        #{liangBiao},
      </if>
      <if test="acOrder != null" >
        #{acOrder},
      </if>
      <if test="picUrl != null" >
        #{picUrl},
      </if>
      <if test="introduce != null" >
        #{introduce},
      </if>
      <if test="batch != null" >
        #{batch},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if>
      <if test="state != null" >
        #{state},
      </if>
      <if test="reportUrl != null" >
        #{reportUrl},
      </if>
      <if test="grade != null" >
        #{grade},
      </if>
      <if test="gradeDescribe != null" >
        #{gradeDescribe},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.thinkjoy.zgk.common.Criteria" resultType="java.lang.Integer" >
    select count(*) from zgk_apesk_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zgk_apesk_course
    <set >
      <if test="record.acId != null" >
        ac_id = #{record.acId},
      </if>
      <if test="record.name != null" >
        name = #{record.name},
      </if>
      <if test="record.liangBiao != null" >
        liang_biao = #{record.liangBiao},
      </if>
      <if test="record.acOrder != null" >
        ac_order = #{record.acOrder},
      </if>
      <if test="record.picUrl != null" >
        pic_url = #{record.picUrl},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce},
      </if>
      <if test="record.batch != null" >
        batch = #{record.batch},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate},
      </if>
      <if test="record.state != null" >
        state = #{record.state},
      </if>
      <if test="record.reportUrl != null" >
        report_url = #{record.reportUrl},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade},
      </if>
      <if test="record.gradeDescribe != null" >
        grade_describe = #{record.gradeDescribe},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zgk_apesk_course
    set ac_id = #{record.acId},
      name = #{record.name},
      liang_biao = #{record.liangBiao},
      ac_order = #{record.acOrder},
      pic_url = #{record.picUrl},
      introduce = #{record.introduce},
      batch = #{record.batch},
      create_date = #{record.createDate},
      state = #{record.state},
      report_url = #{record.reportUrl},
      grade = #{record.grade},
      grade_describe = #{record.gradeDescribe}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.thinkjoy.zgk.domain.ZgkApeskCourse" >
    update zgk_apesk_course
    <set >
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="liangBiao != null" >
        liang_biao = #{liangBiao},
      </if>
      <if test="acOrder != null" >
        ac_order = #{acOrder},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce},
      </if>
      <if test="batch != null" >
        batch = #{batch},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate},
      </if>
      <if test="state != null" >
        state = #{state},
      </if>
      <if test="reportUrl != null" >
        report_url = #{reportUrl},
      </if>
      <if test="grade != null" >
        grade = #{grade},
      </if>
      <if test="gradeDescribe != null" >
        grade_describe = #{gradeDescribe},
      </if>
    </set>
    where ac_id = #{acId}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.thinkjoy.zgk.domain.ZgkApeskCourse" >
    update zgk_apesk_course
    set name = #{name},
      liang_biao = #{liangBiao},
      ac_order = #{acOrder},
      pic_url = #{picUrl},
      introduce = #{introduce},
      batch = #{batch},
      create_date = #{createDate},
      state = #{state},
      report_url = #{reportUrl},
      grade = #{grade},
      grade_describe = #{gradeDescribe}
    where ac_id = #{acId}
  </update>

  <select id="queryConfigByAreaId" resultType="java.lang.String">
    SELECT config_value from zgk_web_config where type = 'APESK' and config_key = #{areaId}
  </select>
</mapper>
