<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.thinkjoy.gaokao360.dao.ex.IZgkApeskDao" >
  <resultMap id="BaseResultMap" type="cn.thinkjoy.zgk.domain.ZgkApesk" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ac_id" property="acId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="liang_biao" property="liangBiao" jdbcType="VARCHAR" />
    <result column="test_email" property="testEmail" jdbcType="VARCHAR" />
    <result column="report_id" property="reportId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="report_date" property="reportDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="UserApeskResultMap" type="cn.thinkjoy.zgk.dto.ZgkApeskDTO">
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="reportId" property="reportId" jdbcType="INTEGER" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="reportDate" property="reportDate" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="reportUrl" property="reportUrl" jdbcType="VARCHAR" />
    <result column="gradeDescribe" property="gradeDescribe" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="picUrl" property="picUrl" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="UserApeskModelMap" type="cn.thinkjoy.zgk.dto.ZgkApeskModelDTO">
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="reportId" property="reportId" jdbcType="INTEGER" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="reportDate" property="reportDate" jdbcType="TIMESTAMP" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.acId != null and condition.acId > -1" >
         and ac_id = #{condition.acId}
      </if>
      <if test="condition.acId_greater != null" >
         and ac_id &gt;= #{condition.acId_greater}
      </if>
      <if test="condition.acId_less != null" >
         and ac_id &lt;= #{condition.acId_less}
      </if>
      <if test="condition.acId_notequal != null" >
         and ac_id &lt;&gt; #{condition.acId_notequal}
      </if>
      <if test="condition.acId_in != null" >
         and ac_id in 
		<foreach collection="condition.acId_in" item="acId" open="(" separator="," close=")" >
			#{acId}
		</foreach>
      </if>
      <if test="condition.userId != null and condition.userId > -1" >
         and user_id = #{condition.userId}
      </if>
      <if test="condition.userId_greater != null" >
         and user_id &gt;= #{condition.userId_greater}
      </if>
      <if test="condition.userId_less != null" >
         and user_id &lt;= #{condition.userId_less}
      </if>
      <if test="condition.userId_notequal != null" >
         and user_id &lt;&gt; #{condition.userId_notequal}
      </if>
      <if test="condition.userId_in != null" >
         and user_id in 
		<foreach collection="condition.userId_in" item="userId" open="(" separator="," close=")" >
			#{userId}
		</foreach>
      </if>
      <if test="condition.liangBiao != null" >
         and liang_biao like #{condition.liangBiao}
      </if>
      <if test="condition.liangBiao_greater != null" >
         and liang_biao &gt;= #{condition.liangBiao_greater}
      </if>
      <if test="condition.liangBiao_less != null" >
         and liang_biao &lt;= #{condition.liangBiao_less}
      </if>
      <if test="condition.liangBiao_notequal != null" >
         and liang_biao &lt;&gt; #{condition.liangBiao_notequal}
      </if>
      <if test="condition.liangBiao_in != null" >
         and liang_biao in 
		<foreach collection="condition.liangBiao_in" item="liangBiao" open="(" separator="," close=")" >
			#{liangBiao}
		</foreach>
      </if>
      <if test="condition.testEmail != null" >
         and test_email like #{condition.testEmail}
      </if>
      <if test="condition.testEmail_greater != null" >
         and test_email &gt;= #{condition.testEmail_greater}
      </if>
      <if test="condition.testEmail_less != null" >
         and test_email &lt;= #{condition.testEmail_less}
      </if>
      <if test="condition.testEmail_notequal != null" >
         and test_email &lt;&gt; #{condition.testEmail_notequal}
      </if>
      <if test="condition.testEmail_in != null" >
         and test_email in 
		<foreach collection="condition.testEmail_in" item="testEmail" open="(" separator="," close=")" >
			#{testEmail}
		</foreach>
      </if>
      <if test="condition.reportId != null and condition.reportId > -1" >
         and report_id = #{condition.reportId}
      </if>
      <if test="condition.reportId_greater != null" >
         and report_id &gt;= #{condition.reportId_greater}
      </if>
      <if test="condition.reportId_less != null" >
         and report_id &lt;= #{condition.reportId_less}
      </if>
      <if test="condition.reportId_notequal != null" >
         and report_id &lt;&gt; #{condition.reportId_notequal}
      </if>
      <if test="condition.reportId_in != null" >
         and report_id in 
		<foreach collection="condition.reportId_in" item="reportId" open="(" separator="," close=")" >
			#{reportId}
		</foreach>
      </if>
      <if test="condition.createDate != null" >
         and create_date like #{condition.createDate}
      </if>
      <if test="condition.createDate1 != null" >
         and create_date &gt;= #{condition.createDate1}
      </if>
      <if test="condition.createDate2 != null" >
         and create_date &lt;= #{condition.createDate2}
      </if>
      <if test="condition.state != null and condition.state > -1" >
         and state = #{condition.state}
      </if>
      <if test="condition.state_greater != null" >
         and state &gt;= #{condition.state_greater}
      </if>
      <if test="condition.state_less != null" >
         and state &lt;= #{condition.state_less}
      </if>
      <if test="condition.state_notequal != null" >
         and state &lt;&gt; #{condition.state_notequal}
      </if>
      <if test="condition.state_in != null" >
         and state in 
		<foreach collection="condition.state_in" item="state" open="(" separator="," close=")" >
			#{state}
		</foreach>
      </if>
      <if test="condition.reportDate != null" >
         and report_date like #{condition.reportDate}
      </if>
      <if test="condition.reportDate1 != null" >
         and report_date &gt;= #{condition.reportDate1}
      </if>
      <if test="condition.reportDate2 != null" >
         and report_date &lt;= #{condition.reportDate2}
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    id, ac_id, user_id, liang_biao, test_email, report_id, create_date, state, report_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.thinkjoy.zgk.common.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zgk_apesk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="mysqlOffset != null and mysqlLength != null" >
      <![CDATA[ limit #{mysqlOffset} , #{mysqlLength} ]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zgk_apesk
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zgk_apesk
    where id = #{id}
  </delete>
  <delete id="deleteByExample" parameterType="cn.thinkjoy.zgk.common.Criteria" >
    delete from zgk_apesk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.thinkjoy.zgk.domain.ZgkApesk" useGeneratedKeys="true" keyProperty="id" >
    insert into zgk_apesk (ac_id, user_id, liang_biao, test_email, report_id, create_date, 
      state, report_date)
    values (#{acId}, #{userId}, #{liangBiao}, #{testEmail}, #{reportId}, #{createDate}, 
      #{state}, #{reportDate})
  </insert>
  <insert id="insertSelective" parameterType="cn.thinkjoy.zgk.domain.ZgkApesk" useGeneratedKeys="true" keyProperty="id" >
    insert into zgk_apesk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="acId != null" >
        ac_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="liangBiao != null" >
        liang_biao,
      </if>
      <if test="testEmail != null" >
        test_email,
      </if>
      <if test="reportId != null" >
        report_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="reportDate != null" >
        report_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="acId != null" >
        #{acId},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="liangBiao != null" >
        #{liangBiao},
      </if>
      <if test="testEmail != null" >
        #{testEmail},
      </if>
      <if test="reportId != null" >
        #{reportId},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if>
      <if test="state != null" >
        #{state},
      </if>
      <if test="reportDate != null" >
        #{reportDate},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.thinkjoy.zgk.common.Criteria" resultType="java.lang.Integer" >
    select count(*) from zgk_apesk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zgk_apesk
    <set >
      <if test="record.id != null" >
        id = #{record.id},
      </if>
      <if test="record.acId != null" >
        ac_id = #{record.acId},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId},
      </if>
      <if test="record.liangBiao != null" >
        liang_biao = #{record.liangBiao},
      </if>
      <if test="record.testEmail != null" >
        test_email = #{record.testEmail},
      </if>
      <if test="record.reportId != null" >
        report_id = #{record.reportId},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate},
      </if>
      <if test="record.state != null" >
        state = #{record.state},
      </if>
      <if test="record.reportDate != null" >
        report_date = #{record.reportDate},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zgk_apesk
    set id = #{record.id},
      ac_id = #{record.acId},
      user_id = #{record.userId},
      liang_biao = #{record.liangBiao},
      test_email = #{record.testEmail},
      report_id = #{record.reportId},
      create_date = #{record.createDate},
      state = #{record.state},
      report_date = #{record.reportDate}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.thinkjoy.zgk.domain.ZgkApesk" >
    update zgk_apesk
    <set >
      <if test="acId != null" >
        ac_id = #{acId},
      </if>
      <if test="userId != null" >
        user_id = #{userId},
      </if>
      <if test="liangBiao != null" >
        liang_biao = #{liangBiao},
      </if>
      <if test="testEmail != null" >
        test_email = #{testEmail},
      </if>
      <if test="reportId != null" >
        report_id = #{reportId},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate},
      </if>
      <if test="state != null" >
        state = #{state},
      </if>
      <if test="reportDate != null" >
        report_date = #{reportDate},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.thinkjoy.zgk.domain.ZgkApesk" >
    update zgk_apesk
    set ac_id = #{acId},
      user_id = #{userId},
      liang_biao = #{liangBiao},
      test_email = #{testEmail},
      report_id = #{reportId},
      create_date = #{createDate},
      state = #{state},
      report_date = #{reportDate}
    where id = #{id}
  </update>
  <select id="selectUserApeskResult" resultMap="UserApeskResultMap" parameterType="java.util.Map">
    select apesk.user_id as userId,apesk.report_id as reportId,apesk.create_date as createDate,apesk.report_date as reportDate,apesk_course.name as name,apesk_course.report_url as reportUrl,apesk_course.grade_describe as gradeDescribe,apesk_course.introduce as introduce,apesk_course.pic_url as picUrl,count(1) as num,apesk.ac_id as type from zgk_apesk as apesk
    left join zgk_apesk_course as apesk_course
    on apesk.ac_id=apesk_course.ac_id
     <where>
       <if test="userId!=null">
         apesk.user_id=#{userId,jdbcType=INTEGER}
       </if>
         and report_id is not null
     </where>
    group by apesk.liang_biao
  </select>
  <select id="selectUserApeskModel" resultMap="UserApeskModelMap" parameterType="java.util.Map">
	select user_id as userId,report_id as reportId,create_date as createDate,report_date as reportDate,count(1) as num from zgk_apesk
	<where>
      <if test="userId!=null">
        and user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="type!=null">
        and ac_id=#{type,jdbcType=INTEGER}
      </if>
	</where>
    group by ac_id
  </select>
</mapper>