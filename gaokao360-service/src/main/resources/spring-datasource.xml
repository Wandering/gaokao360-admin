<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://mybatis.org/schema/mybatis-spring      http://mybatis.org/schema/mybatis-spring.xsd
           http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx.xsd
       ">
    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="cn.thinkjoy.common.managerui.domain,cn.thinkjoy.gaokao360.domain,cn.thinkjoy.gaokao360.dto,cn.thinkjoy.zgk.dto"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath*:/mybatis/**/*.xml"/>
    </bean>
    <!-- 扫描basePackage下接口 自动生成代理实现类 -->
    <mybatis:scan base-package="cn.thinkjoy.common.managerui.dao;cn.thinkjoy.gaokao360.dao" factory-ref="sqlSessionFactory"/>

    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc_url_zgk2}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <bean id="zjDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_zj}"/>
    </bean>
    <bean id="gdDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_gd}"/>
    </bean>
    <bean id="hbDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_hb}"/>
    </bean>
    <bean id="snDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_sn}"/>
    </bean>
    <bean id="hnDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_hn}"/>
    </bean>
    <bean id="fjDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_fj}"/>
    </bean>
    <bean id="gxDataSource" parent="parentDataSource">
        <property name="url" value="${jdbc_url_gx}"/>
    </bean>
    <bean id="dynamicDataSource" class="cn.thinkjoy.gaokao360.common.DynamicDataSource">
        <!-- 通过key-value的形式来关联数据源 -->
        <property name="targetDataSources">
            <map>
                <entry value-ref="zjDataSource" key="zj"></entry>
                <entry value-ref="gdDataSource" key="gd"></entry>
                <entry value-ref="hbDataSource" key="hb"></entry>
                <entry value-ref="snDataSource" key="sn"></entry>
                <entry value-ref="fjDataSource" key="fj"></entry>
                <entry value-ref="hnDataSource" key="hn"></entry>
                <entry value-ref="gxDataSource" key="gx"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="parentDataSource"/>
    </bean>
</beans>
